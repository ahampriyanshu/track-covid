{"version":3,"sources":["images/rotating.png","utils/index.js","components/DataTable/DataTable.jsx","components/SelectionTabs/SelectionTabs.jsx","App.js","api/index.js","components/Rotating/Rotating.jsx"],"names":["module","exports","descendingComparator","a","b","orderBy","useStyles","makeStyles","theme","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","React","memo","data","value","index","classes","useState","setOrderBy","order","setOrder","firstLabel","stateData","headCells","id","numeric","disablePadding","label","tableData","length","TableRow","TableCell","align","colSpan","Rotating","array","comparator","stabilizedThis","map","el","sort","stableSort","getComparator","stateName","confirmed","recovered","deaths","deltaconfirmed","deltadeaths","deltarecovered","key","hover","component","scope","className","Typography","start","end","duration","separator","Paper","elevation","TableContainer","Table","size","stickyHeader","TableHead","headCell","sortDirection","TableSortLabel","active","direction","onClick","property","event","TableBody","Cards","lazy","About","CountryPicker","Chart","setValue","setData","graphData","setGraphData","country","setCountry","useEffect","fetchIndiaData","fetchData","fetchIndiaGraphData","fetchGraphData","handleCountryChange","fetchGlobalData","retrievedData","fallback","square","Tabs","indicatorColor","textColor","onChange","newVal","fetchDailyData","centered","Tab","icon","Footer","styles","zoomIn","animation","animationName","Radium","keyframes","darkMode","setDarkMode","darkTheme","createTheme","palette","type","primary","main","contrastText","background","paper","lightTheme","style","left","right","overflowX","ThemeProvider","CssBaseline","IconButton","aria-label","indianApi","globalApi","axios","get","headers","statewise","filter","state","parseInt","lastUpdated","totData","console","log","cases_time_series","dailyconfirmed","dailydeceased","dailyrecovered","changeableUrl","lastUpdate","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","src","virus","alt"],"mappings":"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","file":"static/js/App.9430e936.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rotating.81ece9a3.png\";","export const descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nexport const stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n};\n","import {getComparator, stableSort} from '../../utils';\nimport Rotating from '../Rotating/Rotating.jsx';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Paper,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport React, {useState} from 'react';\nimport CountUp from 'react-countup';\n\nimport './DataTable.css';\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst DataTable = ({data, value, index}) => {\n  const classes = useStyles();\n  const [orderBy, setOrderBy] = useState('confirmed');\n  const [order, setOrder] = useState('desc');\n\n  let firstLabel = ' ';\n\n  if (value !== index) return null;\n  if (index === 1) {\n    firstLabel = 'State/UT';\n    data = data && data.stateData ? data.stateData : [];\n  } else if (index === 2) {\n    firstLabel = 'Country';\n  }\n\n  const headCells = [\n    {id: 'stateName', numeric: false, disablePadding: false, label: firstLabel},\n    {id: 'confirmed', numeric: true, disablePadding: false, label: 'Confirmed'},\n    {id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered'},\n    {id: 'deaths', numeric: true, disablePadding: false, label: 'Deceased'},\n  ];\n\n  const tableData =\n    data && !data.length ? (\n      <TableRow>\n        <TableCell align=\"center\" colSpan={6}>\n          <Rotating />\n        </TableCell>\n      </TableRow>\n    ) : (\n      stableSort(data, getComparator(order, orderBy)).map(\n        ({\n          stateName,\n          confirmed,\n          recovered,\n          deaths,\n          deltaconfirmed,\n          deltadeaths,\n          deltarecovered,\n        }) => {\n          return (\n            <TableRow key={stateName} hover>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className=\"table-cell state-name\"\n              >\n                {stateName}\n              </TableCell>\n              <TableCell align=\"right\" className=\"table-cell\">\n                {deltaconfirmed > 0 ? (\n                  <Typography className=\"counterConfirmed\">\n                    +{deltaconfirmed}\n                  </Typography>\n                ) : null}\n                <CountUp\n                  start={0}\n                  end={confirmed ? confirmed : 0}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </TableCell>\n              <TableCell align=\"right\" className=\"table-cell\">\n                {deltarecovered > 0 ? (\n                  <Typography className=\"counterRecovered\">\n                    +{deltarecovered}\n                  </Typography>\n                ) : null}\n                <CountUp\n                  start={0}\n                  end={recovered ? recovered : 0}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </TableCell>\n              <TableCell align=\"right\" className=\"table-cell\">\n                {deltadeaths > 0 ? (\n                  <Typography className=\"counterDeaths\">\n                    +{deltadeaths}\n                  </Typography>\n                ) : null}\n                <CountUp\n                  start={0}\n                  end={deaths ? deaths : 0}\n                  duration={2.5}\n                  separator=\",\"\n                />\n              </TableCell>\n            </TableRow>\n          );\n        }\n      )\n    );\n\n  const handleSort = (property) => (event) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  return (\n    <div className=\"datatable-container\">\n      <Paper className=\"paper\" elevation={0}>\n        <TableContainer  padding=\"normal\" className=\"random\">\n          <Table  padding=\"normal\" className=\"table\" size=\"small\" stickyHeader>\n            <TableHead  padding=\"normal\">\n              <TableRow  padding=\"normal\">\n                {headCells.map((headCell) => (\n                  <TableCell\n                    key={headCell.id}\n                    align={headCell.numeric ? 'right' : 'left'}\n                    padding={headCell.disablePadding ? 'none' : 'normal'}\n                    sortDirection={orderBy === headCell.id ? order : false}\n                    className=\"table-cell\"\n                  >\n                    <TableSortLabel\n                      active={orderBy === headCell.id}\n                      direction={orderBy === headCell.id ? order : 'asc'}\n                      onClick={handleSort(headCell.id)}\n                      className=\"t-head\"\n                    >\n                      {headCell.label}\n                      {orderBy === headCell.id ? (\n                        <span className={classes.visuallyHidden}>\n                          {order === 'desc'\n                            ? 'sorted descending'\n                            : 'sorted ascending'}\n                        </span>\n                      ) : null}\n                    </TableSortLabel>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>{tableData}</TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default React.memo(DataTable);\n","import {\n  fetchIndiaData,\n  fetchIndiaGraphData,\n  fetchGlobalData,\n  fetchDailyData,\n} from '../../api';\nimport DataTable from '../DataTable/DataTable.jsx';\nimport {Paper, Tabs, Tab} from '@material-ui/core';\nimport PublicIcon from '@material-ui/icons/Public';\nimport React, {Suspense, lazy, useState, useEffect} from 'react';\nimport * as Icon from 'react-feather';\nimport './SelectionTabs.css';\n\nconst Cards = lazy(() =>\n  import('../Cards/Cards.jsx' /* webpackChunkName: \"Cards\" */)\n);\nconst About = lazy(() =>\n  import('../About/About' /* webpackChunkName: \"About\" */)\n);\nconst CountryPicker = lazy(() =>\n  import(\n    '../CountryPicker/CountryPicker.jsx' /* webpackChunkName: \"CountryPicker\" */\n  )\n);\nconst Chart = lazy(() =>\n  import('../Chart/Chart.jsx' /* webpackChunkName: \"Chart\" */)\n);\n\nconst SelectionTabs = () => {\n  const [value, setValue] = useState(1);\n  const [data, setData] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setData(await fetchIndiaData());\n    };\n    fetchData();\n    const fetchGraphData = async () => {\n      setGraphData(await fetchIndiaGraphData());\n    };\n    fetchGraphData();\n  }, []);\n\n  const handleChange = (event, newVal) => {\n    setValue(newVal);\n    setCountry('');\n    if (newVal === 1) {\n      const fetchData = async () => {\n        setData(await fetchIndiaData());\n      };\n      fetchData();\n      const fetchGraphData = async () => {\n        setGraphData(await fetchIndiaGraphData());\n      };\n      fetchGraphData();\n    } else if (newVal === 2) {\n      const fetchData = async () => {\n        setData(await fetchGlobalData());\n      };\n      fetchData();\n      const fetchGraphData = async () => {\n        setGraphData(await fetchDailyData());\n      };\n      fetchGraphData();\n    }\n  };\n\n  const handleCountryChange = async (country) => {\n    const retrievedData = await fetchGlobalData(country);\n    setData(retrievedData);\n    setGraphData(retrievedData);\n    setCountry(country);\n  };\n\n  return (\n    <div className=\"tab-container\">\n      <Suspense fallback={<div />}>\n        <Paper square elevation={0} className=\"tab-style\">\n          <Tabs\n            className=\"tabs\"\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            centered\n          >\n            <Tab icon={<Icon.Users />} label=\"About\" />\n            <Tab icon={<Icon.Home />} label=\"Home\" />\n            <Tab icon={<PublicIcon />} label=\"World\" />\n          </Tabs>\n        </Paper>\n      </Suspense>\n\n      <Suspense fallback={<div />}>\n        <About value={value} index={0} />\n      </Suspense>\n\n      <Suspense fallback={<div />}>\n        <Cards data={data} value={value} index={1} />\n      </Suspense>\n\n      <Suspense fallback={<div />}>\n        <Chart value={value} index={1} graphData={graphData} />\n      </Suspense>\n\n      <DataTable value={value} index={1} data={data} />\n\n      <Suspense fallback={<div />}>\n        <CountryPicker\n          handleCountryChange={handleCountryChange}\n          value={value}\n          index={2}\n        />\n      </Suspense>\n\n      <Suspense fallback={<div />}>\n        <Cards data={data} value={value} index={2} />\n      </Suspense>\n\n      <Suspense fallback={<div />}>\n        <Chart\n          value={value}\n          index={2}\n          graphData={graphData}\n          country={country}\n        />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default React.memo(SelectionTabs);\n","import SelectionTabs from './components/SelectionTabs/SelectionTabs.jsx';\nimport React, {useState, Suspense, lazy} from 'react';\nimport {ThemeProvider, Paper} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IconButton from '@material-ui/core/IconButton';\nimport { createTheme } from '@material-ui/core/styles';\nimport Radium, {StyleRoot} from 'radium';\nimport {zoomIn} from 'react-animations';\nimport * as Icon from 'react-feather';\nimport './App.css';\n\nconst Footer = lazy(() =>\n  import('./components/Footer/Footer' /* webpackChunkName: \"Footer\" */)\n);\n\nfunction App() {\n  const styles = {\n    zoomIn: {\n      animation: 'x 2.5s',\n      animationName: Radium.keyframes(zoomIn, 'zoomIn'),\n    },\n  };\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  const icon = darkMode ? <Icon.Sun /> : <Icon.Moon />;\n\n  const darkTheme = createTheme({\n    palette: {\n      type: 'dark',\n      primary: {main: '#f2a365', contrastText: '#fff'},\n      background: {\n        paper: '#161625',\n      },\n    },\n  });\n\n  const lightTheme = createTheme({\n    palette: {\n      type: 'light',\n      primary: {main: '#29c7ac', contrastText: '#fff'},\n      background: {\n        paper: 'white',\n      },\n    },\n  });\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        position: 'absolute',\n        left: '0px',\n        right: '0px',\n        top: '0px',\n        width: '100%',\n        overflowX: 'hidden',\n      }}\n    >\n      <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n        <CssBaseline />\n        <Paper elevation={0}>\n          <Suspense fallback={<div />}>\n            <StyleRoot>\n              <div className=\"headerCont\">\n                <span style={styles.zoomIn} className=\"header track\">\n                  {' '}\n                  TRACK{' '}\n                </span>{' '}\n                <span style={styles.zoomIn} className=\"header covid\">\n                  &nbsp;COVID{' '}\n                </span>{' '}\n                <span style={styles.zoomIn} className=\"toggle-button\">\n                  <IconButton\n                    aria-label=\"darkMode\"\n                    onClick={() => setDarkMode(!darkMode)}\n                  >\n                    {icon}\n                  </IconButton>\n                </span>\n              </div>\n            </StyleRoot>\n          </Suspense>\n          <SelectionTabs />\n          <Suspense fallback={<div />}>\n            <Footer />\n          </Suspense>\n        </Paper>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import axios from 'axios';\n\nconst indianApi = 'https://data.covid19india.org';\nconst globalApi = 'https://covid19.mathdro.id/api';\n\nexport const fetchIndiaData = async () => {\n  try {\n    const {\n      data: {statewise},\n    } = await axios.get(`${indianApi}/data.json`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const stateData = statewise\n      .filter((a, b) => a.state !== 'Total')\n      .sort((a, b) => parseInt(b.confirmed) - parseInt(a.confirmed))\n      .map(\n        ({\n          state,\n          confirmed,\n          active,\n          recovered,\n          deaths,\n          deltaconfirmed,\n          deltarecovered,\n          deltadeaths,\n          lastUpdated,\n        }) => {\n          return {\n            stateName: state,\n            confirmed: parseInt(confirmed),\n            active: parseInt(active),\n            recovered: parseInt(recovered),\n            deaths: parseInt(deaths),\n            deltaconfirmed: parseInt(deltaconfirmed),\n            deltarecovered: parseInt(deltarecovered),\n            deltadeaths: parseInt(deltadeaths),\n            lastUpdated: lastUpdated,\n          };\n        }\n      );\n    const totData = statewise\n      .filter((a, b) => a.state === 'Total')\n      .map(\n        ({\n          confirmed,\n          recovered,\n          deaths,\n          deltaconfirmed,\n          deltadeaths,\n          deltarecovered,\n          lastUpdated,\n        }) => {\n          return {\n            confirmed: {value: parseInt(confirmed)},\n            recovered: {value: parseInt(recovered)},\n            deaths: {value: parseInt(deaths)},\n            deltaconfirmed: parseInt(deltaconfirmed),\n            deltarecovered: parseInt(deltarecovered),\n            deltadeaths: parseInt(deltadeaths),\n            lastUpdated: lastUpdated,\n          };\n        }\n      );\n    return {stateData, totData};\n  } catch (error) {\n    console.log('fetchIndiaData -> error', error);\n  }\n};\n\nexport const fetchIndiaGraphData = async () => {\n  try {\n    const {\n      data: {cases_time_series},\n    } = await axios.get(`${indianApi}/data.json`);\n    const graphData = cases_time_series.map(\n      ({dailyconfirmed, dailydeceased, dailyrecovered}) => {\n        return {\n          confirmed: parseInt(dailyconfirmed),\n          recovered: parseInt(dailyrecovered),\n          deaths: parseInt(dailydeceased),\n        };\n      }\n    );\n    return graphData;\n  } catch (error) {\n    console.log('fetchIndiaGraphData -> error', error);\n  }\n};\n\nexport const fetchGlobalData = async (country) => {\n  let changeableUrl = !country\n    ? globalApi\n    : `${globalApi}/countries/${country}`;\n  try {\n    const {\n      data: {confirmed, recovered, deaths, lastUpdate},\n    } = await axios.get(changeableUrl);\n    return {confirmed, recovered, deaths, lastUpdate};\n  } catch (error) {\n    console.log('fetchGlobalData -> error', error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const {data} = await axios.get(`${globalApi}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      recovered: dailyData.confirmed.total - dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log('fetchDailyData -> error', error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {countries},\n    } = await axios.get(`${globalApi}/countries`);\n    return countries;\n  } catch (error) {\n    console.log('fetchCountries -> error', error);\n  }\n};\n","import React from 'react';\n\nimport './Rotating.css';\nimport virus from '../../images/rotating.png';\n\nconst Rotating = () => {\n  return <img src={virus} alt=\"Loading...\" className=\"rotating\" />;\n};\n\nexport default React.memo(Rotating);\n"],"sourceRoot":""}